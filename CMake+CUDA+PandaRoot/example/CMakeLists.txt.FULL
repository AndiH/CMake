find_package(CUDA)
CUDA_INCLUDE_DIRECTORIES(
  "${CMAKE_CURRENT_SOURCE_DIR}"
  )
set(CUDA_SRCS
  cudaDevInfo.cu
  )
# set(CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE OFF)
# CUDA_ADD_EXECUTABLE(cuda_example
#   main.cc
#  )
set(BUILD_SHARED_LIBS ON)
# set(CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE ON)

list(APPEND CUDA_NVCC_FLAGS --gpu-architecture sm_20)

set(CUDASONAME "cudaNewTest")

CUDA_ADD_LIBRARY(${CUDASONAME} 
  ${CUDA_SRCS}
   SHARED # This seems to be, for our case, equivalent with set(BUILD_SHARED_LIBS ON)
  )
message("END CMakeFile cuda")
# TARGET_LINK_LIBRARIES(cuda_example
#    cudaNewTest
#   ${CUDA_TARGET_LINK}
#   ${CUDA_CUT_TARGET_LINK}
#   ${ROOT_LIBRARIES}
#   )
# CUDA_BUILD_CLEAN_TARGET()

# CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS( "${CMAKE_BINARY_DIR}/libcudaNewTest.so" cudaNewTest ${CUDA_NVCC_FLAGS} ${CUDA_SRCS})

# INSTALL(FILES "${CMAKE_BINARY_DIR}/libcudaNewTest.so" DESTINATION lib)
